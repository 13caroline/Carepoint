openapi: 3.0.1
info:
  title: Carepoint
  version: 1.0.0
servers:
- url: http://localhost:9040/
paths:
  
  /category/:
    get:
      tags:
        - Category
      description: Get list of categories
      responses:
        200:
          description: A JSON containing the information of all categories
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/category'
        400:
          description: Sends the error created
  
  /serviceProvider/:
    get:
      tags:
        - ServiceProvider
      description: Get service provider given its id
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: id of serviceProvider
      responses:
        200:
          description: A JSON containing serviceProvider information
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/perfil_service_provider'
        400:
          description: Error message saying it couldn't obtain the service provider with the given id
  
  /serviceProvider/horarios/:
    get:
      tags:
        - ServiceProvider
      description: Get service provider given its id
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: id of serviceProvider
      responses:
        200:
          description: A JSON containing the information of theschedule of the serviceProvider
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/service_provider_schedule'
        400:
          description: Error message saying it couldn't obtain the service provider with the given id
  
  /serviceProvider/newSlot/:
    put:
      tags:
        - ServiceProvider
      description: Add new occupied slot
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - dateBegin
              - dateEnd
              - spId
              - categories
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                dateBegin:
                  type: string
                  format: date
                dateEnd:
                  type: string
                  format: date
                spId:
                  type: integer
                categories:
                  type: array
                  items:
                    type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
  
  /serviceProvider/regHorario/:
    put:
      tags:
        - ServiceProvider
      description: Add new occupied slot
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - dateBegin
              - dateEnd
              - category
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                dateBegin:
                  type: string
                  format: date
                dateEnd:
                  type: string
                  format: date
                category:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
          
  /review/:
    post:
      tags:
        - Review
      description: Create a new review
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - receivingId
              - description
              - rating
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                receivingId:
                  type: integer
                description:
                  type: string
                rating:
                  type: integer
      responses:
        200:
          description: Review adicionada com sucesso
        400:
          description: Sends the error created
  
  /review/edit:
    put:
      tags:
        - Review
      description: Edit a review
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - idReview
              - idGive
              - idReceive
              - description
              - rating
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                idReview:
                  type: integer
                idGive:
                  type: integer
                idReceive:
                  type: integer
                description:
                  type: string
                rating:
                  type: integer
      responses:
        200:
          description: Review editada com sucesso
        400:
          description: Sends the error created
  
  /joboffer/new:
    post:
      tags:
        - Job Offer
      description: Creates new job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - description
              - beginDate
              - price
              - endDate
              - idUser
              - idCategory
              - idLocation
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                description:
                  type: string
                beginDate:
                  type: string
                  format: date
                price:
                  type: number
                endDate:
                  type: string
                  format: date
                idUser:
                  type: integer
                idCategory:
                  type: integer
                idLocation:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
  
  /joboffer/search:
    post:
      tags:
        - Job Offer
      description: Search for a job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - page
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                page:
                  type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/jobs'
        400:
          description: Sends error created
  
  /joboffer/conclude:
    put:
      tags:
        - Job Offer
      description: Conclude a job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - id_job_offer
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                id_job_offer:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Failure marking job as completed
  
  /joboffer/own:
    post:
      tags:
        - Job Offer
      description: Get user's job offers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
      responses:
        200:
          description: A JSON containing the list of jobs
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/consumer_job_offer'
        400:
          description: Sends the error created
  
  /message/seeUsers:
    post:
      tags:
        - Messages
      description: Get all messaged users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
      responses:
        200:
          description: A JSON containing the list of users
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/messaged_user'
        400:
          description: Sends the error created
  
  /message/seeMessages:
    post:
      tags:
        - Messages
      description: Get all messages between users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - idUser2
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                idUser2:
                  type: integer
      responses:
        200:
          description: A JSON containing the list of messages
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/message'
        400:
          description: Sends the error created
  
  /message/addMessage:
    post:
      tags:
        - Messages
      description: Add new message
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - content
              - idUser2
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                content:
                  type: string
                idUser2:
                  type: integer
      responses:
        200:
          description: Message added successfully
        400:
          description: Sends the error created
                
components:
  schemas:
    category:
      type: object
      properties:
        idCategory: 
          type: integer
        name: 
          type: string
    messaged_user:
      type: object
      properties:
        idUser:
          type: integer
        name:
          type: string
        image:
          type: string
    message:
      type: object
      properties:
        date:
          type: string
          format: date
        content:
          type: string
        idGive:
          type: integer
        idReceive:
          type: integer
        
    consumer_job_offer:
      type: object
      properties:
        idJobOffer: 
          type: integer
        description: 
          type: string
        beginDate: 
          type: string
          format: date
        postDate:
          type: string
          format: date
        price:
          type: number
        done:
          type: integer
          enum: [0, 1]
        endDate:
          type: string
          format: date
        idUser:
          type: integer
        idCategory:
          type: integer
        categoryName:
          type: string
        idLocation:
          type: integer
        idLocationName:
          type: string
    jobs:
      type: object
      properties:
        idJobOffer:
          type: integer
        idUser:
          type: integer
        name:
          type: string
        lastActivity:
          type: string
          format: date
        description:
          type: string
        beginDate:
          type: string
          format: date
        postDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        price:
          type: number
        idCategory:
          type: integer
        done:
          type: integer
          enum: [0, 1]
        category:
          type: string
        location:
          type: string
        cordsX:
          type: number
        cordsY:
          type: number
    service_provider_schedule:
      type: object
      properties:
        name: 
          type: string
        workSchedule:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                format: date
              occupied:
                type: integer
                enum: [0, 1]
    perfil_service_provider:
      type: object
      properties:
        perfil:
          type: object
          properties:
            idUser:
              type: integer
            name:
              type: string
            email:
              type: string
            phoneNumber:
              type: string
            sex:
              type: string
              enum: [M, F, I]
            type:
              type: integer
              enum: [1, 2, 3, 4]
            createdAt:
              type: string
            lastActivity:
              type: string
            active:
              type: integer
              enum: [0, 1]
            locationName: 
              type: string
            coordsX: 
              type: number
            coordsY: 
              type: number
            image:
              type: string
            description:
              type: string
            endSub:
              type: string
              description: End of the Regular Subscription
            endSubVip:
              type: string
              description: End of the VIP Subscription
            subType:
              type: integer
              description: Current subscription type held by the Service Provider
              enum: [0, 1, 2, 3, 4, 5, 6, 7, 8 ,9 ,10, 11, 12]
        reviews:
          type: array
          items: 
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              rating:
                type: number
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              experience:
                type: integer
              workSchedule:
                type: object
              occupiedSchedule:
                type: object
              price:
                type: number
          