openapi: 3.0.1
info:
  title: Carepoint
  version: 1.0.0
servers:
- url: http://localhost:9040/
  description: API-Server.
paths:
  /users/register:
    post:
      tags:
        - Users
      description: Register a new User in the platform. Uses a different server!
      servers:
        - url: http://localhost:9041/
          description: AUTH-Server.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/register_consumer'
                - $ref: '#/components/schemas/register_service_provider'
                - $ref: '#/components/schemas/register_company'
      responses:
        200:
          description: Success. (Automatically logs in the user)
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                    description: This user's newly generated JavaWebToken
                  type:
                    type: integer
                    enum: [1, 2, 3, 4]
        400:
          description: Error message generated.
      
  /users/login:
    post:
      tags:
        - Users
      description: Login. Uses a different server!
      servers:
        - url: http://localhost:9041/
          description: AUTH-Server.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - email
                - password
              properties:
                email:
                  type: string
                password:
                  type: string
              
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                    description: This user's newly generated JavaWebToken
                  type:
                    type: integer
                    enum: [1, 2, 3, 4]
        400:
          description: Error message generated.
  
  /users/logout:
    post:
      tags:
        - Users
      description: Logout. Uses a different server!
      servers:
        - url: http://localhost:9041/
          description: AUTH-Server.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - token
              properties:
                token:
                  type: string
                  description: A Java Web Token.
      responses:
        200:
          description: Success.
        400:
          description: Failure.
      
  /users/upgrade:
    post:
      tags:
        - Users
      description: Upgrades a regular user to Service Provider. Type 2 -> 3
      servers:
        - url: http://localhost:9041/
          description: AUTH-Server.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - token
                - password
                - description
                - dateOfBirth
                - distance
                - qualifications
                - categories
              properties:
                token:
                  type: string
                password:
                  type: string
                description:
                  type: string
                dateOfBirth:
                  type: string
                distance:
                  type: number
                  description: distance in KM they are willing to travel for work.
                qualifications:
                  type: string
                  description: Qualifications of the Service Provider.
                categories:
                  type: array
                  items:
                    type: integer
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                properties:
                  token:
                    type: string
                    description: This user's newly generated JavaWebToken
        400:
          description: Error message generated.
  
  /users/perfil:
    post:
      tags:
        - Users
      description: Get the profile of the logged in user.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
        required: true
      responses:
        200:
          description: A JSON containing user information.
          content:
            application/json:
              schema:
                oneOf:
                  - $ref: '#/components/schemas/perfil_consumer'
                  - $ref: '#/components/schemas/perfil_service_provider'
                  - $ref: '#/components/schemas/perfil_company'
        400:
          description: Sends the error created.
  
  /users/image:
    post:
      tags:
        - Users
      description: Obtain a users profile picture
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken
        required: true
      responses:
        200:
          description: A JSON containing the picture.
        400:
          description: Sends the error created.
    
  /users/id:
    post:
      tags:
        - Users
      description: Obtain a users Identification Number
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken
        required: true
      responses:
        200:
          description: A JSON containing the ID.
        400:
          description: Sends the error created.
    
  /users/update:
    put:
      tags:
        - Users
      description: Update a users profile
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              oneOf:
                - $ref: '#/components/schemas/update_consumer'
                - $ref: '#/components/schemas/update_service_provider'
                - $ref: '#/components/schemas/update_company'
      responses:
        201:
          description: Success
        400:
          description: Error message generated.
  
  /users/updatePassword:
    put:
      tags:
        - Users
      description: Update a users password
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - oldPassword
              - newPassword_1
              - newPassword_2
              - idUser
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                oldPassword:
                  type: string
                newPassword_1:
                  type: string
                newPassword_2:
                  type: string
                idUser:
                  type: integer
                  description: The ID of the user whose password is being altered, to be matched with the given token to confirm the user that's trying to be changed matches with the currently logged in user.
      responses:
        201:
          description: Success
        400:
          description: Error message explaining whether the passwords don't match or the old password is wrong.
    
  /users/updatePhoto:
    put:
      tags:
        - Users
      description: Update a users profile picture
      requestBody:
        content:
          multipart/form-data:
            schema:
              required:
              - token
              - image
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
          image/png:
            schema:
              type: string
              format: hexadecimal
      responses:
        201:
          description: Success
        400:
          description: Error message explaining whether the passwords don't match or the old password is wrong.
  
  /location/:
    get:
      tags:
        - Location
      description: Get a list of all locations in the database.
      responses:
        200:
          description: JSON with all the locations.
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    idLocation:
                      type: integer
                    name:
                      type: string

  /subscription/:
    post:
      tags:
        - Subscription
      description: Add a subscription to a new Service provider or Company.
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
                - token
                - subscription
                - visibility
              properties:
                token:
                  type: string
                  description: A Java Web Token.
                subscription:
                  type: integer
                  enum: [0, 1, 3, 6]
                visibility: 
                  type: integer
                  enum: [1, 3, 6]
      responses:
        200: 
          description: Success.
        400:
          description: Failure.

  /company/specific:
    get:
      tags:
        - Company
      description: Get information about one specific company
      parameters:
        - in: query
          name: id
          description: Company Identification Number
          schema:
            type: integer
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                properties:
                  idUser:
                    type: integer
                  name:
                    type: string
                  email:
                    type: string
                  phoneNumber:
                    type: string
                  sex:
                    type: string
                    enum: [M, F, I]
                  type:
                    type: integer
                    enum: [4]
                  createdAt:
                    type: string
                  lastActivity:
                    type: string
                  active:
                    type: integer
                    enum: [0, 1]
                  locationName:
                    type: string
                  cordsX:
                    type: number
                  cordsY:
                    type: number
                  link: 
                    type: string
                  firm:
                    type: string
                  nipc:
                    type: number
                  description:
                    type: string
                  image:
                    type: string
        400:
          description: Failure

  /search/max:
    get:
      tags:
        - Search
      description: Returns the max value of Price, Experience and Rating present within the database.
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                properties:
                  price:
                    type: number
                  experience:
                    type: number
                  rating:
                    type: number
        400:
          description: Failure
  
  /search/serviceProviders:
    get:
      tags:
        - Search
      description: Get all Service Providers that fit the criteria
      parameters:
        - in: query
          name: page
          description: Desired page of the search
          required: true
          schema:
            type: integer
        - in: query
          name: category
          schema: 
            type: integer
        - in: query
          name: location
          schema:
            type: integer
        - in: query
          name: rating
          schema:
            type: integer
        - in: query
          name: sex
          schema:
            type: string
            enum: [M, F, N]
        - in: query
          name: experience
          schema:
            type: integer
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/perfil_company'
                  ServiceProviders_Sum:
                    type: object
                    properties:
                      number_sps:
                        type: integer
                        description: Number of Service Providers found
        400:
          description: Failure.

  /search/companies:
    get:
      tags:
        - Search
      description: Get all Companies that fit the criteria
      parameters:
        - in: query
          name: page
          description: Desired page of the search
          required: true
          schema:
            type: integer
        - in: query
          name: location
          schema:
            type: integer
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/perfil_company'
                  Companies_Sum:
                    type: object
                    properties:
                      number_cps:
                        type: integer
                        description: Number of Companies found
        400:
          description: Failure.    
  
  /search/BySpName:
    get:
      tags:
        - Search
      description: Get all Service Providers with matching names
      parameters:
        - in: query
          name: page
          description: Desired page of the search
          required: true
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/perfil_company'
                  ServiceProviders_Sum:
                    type: object
                    properties:
                      number_sps:
                        type: integer
                        description: Number of Service Providers found
        400:
          description: Failure.    
  
  /search/ByCompanyName:
    get:
      tags:
        - Search
      description: Get all Companies with matching names
      parameters:
        - in: query
          name: page
          description: Desired page of the search
          required: true
          schema:
            type: integer
        - in: query
          name: name
          schema:
            type: string
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                type: object
                properties:
                  Companies:
                    type: array
                    items:
                      $ref: '#/components/schemas/perfil_company'
                  Companies_Sum:
                    type: object
                    properties:
                      number_cps:
                        type: integer
                        description: Number of Companies found
        400:
          description: Failure.  

  /category/:
    get:
      tags:
        - Category
      description: Get list of categories
      responses:
        200:
          description: A JSON containing the information of all categories
          content:
            application/json:
              schema:
                allOf:
                  - $ref: '#/components/schemas/category'
        400:
          description: Sends the error created
  
  /serviceProvider/:
    get:
      tags:
        - ServiceProvider
      description: Get service provider given its id
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: id of serviceProvider
      responses:
        200:
          description: A JSON containing serviceProvider information
          content:
            application/json:
              schema:
                oneOf:
                - $ref: '#/components/schemas/perfil_service_provider'
        400:
          description: Error message saying it couldn't obtain the service provider with the given id
  
  /serviceProvider/horarios/:
    get:
      tags:
        - ServiceProvider
      description: Get service provider given its id
      parameters:
        - in: query
          name: id
          schema:
            type: integer
          required: true
          description: id of serviceProvider
      responses:
        200:
          description: A JSON containing the information of theschedule of the serviceProvider
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/service_provider_schedule'
        400:
          description: Error message saying it couldn't obtain the service provider with the given id
  
  /serviceProvider/newSlot/:
    put:
      tags:
        - ServiceProvider
      description: Add new occupied slot
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - dateBegin
              - dateEnd
              - spId
              - categories
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                dateBegin:
                  type: string
                  format: date
                dateEnd:
                  type: string
                  format: date
                spId:
                  type: integer
                categories:
                  type: array
                  items:
                    type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
  
  /serviceProvider/regHorario/:
    put:
      tags:
        - ServiceProvider
      description: Add new occupied slot
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - dateBegin
              - dateEnd
              - category
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                dateBegin:
                  type: string
                  format: date
                dateEnd:
                  type: string
                  format: date
                category:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
          
  /review/:
    post:
      tags:
        - Review
      description: Create a new review
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - receivingId
              - description
              - rating
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                receivingId:
                  type: integer
                description:
                  type: string
                rating:
                  type: integer
      responses:
        200:
          description: Review adicionada com sucesso
        400:
          description: Sends the error created
  
  /review/edit:
    put:
      tags:
        - Review
      description: Edit a review
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - idReview
              - idGive
              - idReceive
              - description
              - rating
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                idReview:
                  type: integer
                idGive:
                  type: integer
                idReceive:
                  type: integer
                description:
                  type: string
                rating:
                  type: integer
      responses:
        200:
          description: Review editada com sucesso
        400:
          description: Sends the error created
  
  /joboffer/new:
    post:
      tags:
        - Job Offer
      description: Creates new job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - description
              - beginDate
              - price
              - endDate
              - idUser
              - idCategory
              - idLocation
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                description:
                  type: string
                beginDate:
                  type: string
                  format: date
                price:
                  type: number
                endDate:
                  type: string
                  format: date
                idUser:
                  type: integer
                idCategory:
                  type: integer
                idLocation:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Sends the error created
  
  /joboffer/search:
    post:
      tags:
        - Job Offer
      description: Search for a job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - page
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                page:
                  type: integer
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/jobs'
        400:
          description: Sends error created
  
  /joboffer/conclude:
    put:
      tags:
        - Job Offer
      description: Conclude a job offer
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - id_job_offer
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                id_job_offer:
                  type: integer
      responses:
        200:
          description: Success
        400:
          description: Failure marking job as completed
  
  /joboffer/own:
    post:
      tags:
        - Job Offer
      description: Get user's job offers
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
      responses:
        200:
          description: A JSON containing the list of jobs
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/consumer_job_offer'
        400:
          description: Sends the error created
  
  /message/seeUsers:
    post:
      tags:
        - Messages
      description: Get all messaged users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
      responses:
        200:
          description: A JSON containing the list of users
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/messaged_user'
        400:
          description: Sends the error created
  
  /message/seeMessages:
    post:
      tags:
        - Messages
      description: Get all messages between users
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - idUser2
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                idUser2:
                  type: integer
      responses:
        200:
          description: A JSON containing the list of messages
          content:
            application/json:
              schema:
                allOf:
                - $ref: '#/components/schemas/message'
        400:
          description: Sends the error created
  
  /message/addMessage:
    post:
      tags:
        - Messages
      description: Add new message
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              required:
              - token
              - content
              - idUser2
              properties:
                token:
                  type: string
                  description: A JavaWebToken.
                content:
                  type: string
                idUser2:
                  type: integer
      responses:
        200:
          description: Message added successfully
        400:
          description: Sends the error created  

components:
  schemas:
    perfil_consumer:
      type: object
      properties:
        perfil:
          type: object
          properties:
            idUser:
              type: integer
            name:
              type: string
            email:
              type: string
            sex:
              type: string
              enum: [M, F, I]
            type:
              type: integer
              enum: [1, 2, 3, 4]
            createdAt:
              type: string
            lastActivity:
              type: string
            active:
              type: integer
              enum: [0, 1]
            locationName: 
              type: string
            phoneNumber:
              type: string
            coordsX: 
              type: number
            coordsY: 
              type: number
            image:
              type: string
        
    perfil_service_provider:
      type: object
      properties:
        perfil:
          type: object
          properties:
            idUser:
              type: integer
            name:
              type: string
            email:
              type: string
            phoneNumber:
              type: string
            sex:
              type: string
              enum: [M, F, I]
            type:
              type: integer
              enum: [1, 2, 3, 4]
            createdAt:
              type: string
            lastActivity:
              type: string
            active:
              type: integer
              enum: [0, 1]
            locationName: 
              type: string
            coordsX: 
              type: number
            coordsY: 
              type: number
            image:
              type: string
            description:
              type: string
            endSub:
              type: string
              description: End of the Regular Subscription
            endSubVip:
              type: string
              description: End of the VIP Subscription
            subType:
              type: integer
              description: Current subscription type held by the Service Provider
              enum: [0, 1, 2, 3, 7, 8 ,9]
        reviews:
          type: array
          items: 
            type: object
            properties:
              name:
                type: string
              description:
                type: string
              rating:
                type: number
        categories:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              experience:
                type: integer
              workSchedule:
                type: object
              occupiedSchedule:
                type: object
              price:
                type: number
          
    perfil_company:
      type: object
      properties:
        perfil:
          type: object
          properties:
            idUser:
              type: integer
            name:
              type: string
            email:
              type: string
            phoneNumber:
              type: string
            sex:
              type: string
              enum: [M, F, I]
            type:
              type: integer
              enum: [1, 2, 3, 4]
            createdAt:
              type: string
            lastActivity:
              type: string
            active:
              type: integer
              enum: [0, 1]
            locationName: 
              type: string
            coordsX: 
              type: number
            coordsY: 
              type: number
            image:
              type: string
            link:
              type: string
            firm:
              type: string
            nipc:
              type: number
            endSub:
              type: string
              description: End of the Regular Subscription
            endSubVip:
              type: string
              description: End of the VIP Subscription
            subType:
              type: integer
              description: Current subscription type held by the Service Provider
              enum: [0, 4, 5, 6, 10, 11, 12]

    update_consumer:
      required:
        - token
      properties:
        token:
          type: string
          description: A JavaWebToken
        idUser:
          type: integer
        type:
          type: integer
          enum: [1, 2, 3, 4]
        name:
          type: string
        email:
          type: string
        location:
          type: integer
        phoneNumber:
          type: string
    
    update_service_provider:
      required:
        - token
      properties:
        token:
          type: string
          description: A JavaWebToken
        idUser:
          type: integer
        type:
          type: integer
          enum: [1, 2, 3, 4]
        name:
          type: string
        email:
          type: string
        location:
          type: integer
        phoneNumber:
          type: string
        quali:
          type: string
          description: Qualifications of the Service Provider.
        raio:
          type: number
          description: distance in KM they are willing to travel for work.
        description:
          type: string

    update_company:
      required:
        - token
      properties:
        token:
          type: string
          description: A JavaWebToken
        idUser:
          type: integer
        type:
          type: integer
          enum: [1, 2, 3, 4]
        name:
          type: string
        email:
          type: string
        location:
          type: integer
        phoneNumber:
          type: string
        link:
          type: string
          description: Link to their personal website.
        firm:
          type: string
        nipc:
          type: number
        description:
          type: string

    register_consumer:
      required:
        - name
        - email
        - password
        - sex
        - type
        - location
        - phoneNumber
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        sex:
          type: string
          enum: [M, F, I]
        type:
          type: integer
          enum: [1, 2, 3]
        location:
          type: integer
        phoneNumber:
          type: string

    register_service_provider:
      required:
        - name
        - email
        - password
        - sex
        - type
        - location
        - phoneNumber
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        sex:
          type: string
          enum: [M, F, I]
        type:
          type: integer
          enum: [1, 2, 3]
        location:
          type: integer
        phoneNumber:
          type: string
        description:
          type: string
        dateOfBirth:
          type: string
        distance:
          type: number
          description: distance in KM they are willing to travel for work.
        qualifications:
          type: string
          description: Qualifications of the Service Provider.
        categorias:
          type: array
          items:
            type: integer
      
    register_company:
      required:
        - name
        - email
        - password
        - sex
        - type
        - location
        - phoneNumber
      properties:
        name:
          type: string
        email:
          type: string
        password:
          type: string
        sex:
          type: string
          enum: [M, F, I]
        type:
          type: integer
          enum: [1, 2, 3]
        location:
          type: integer
        phoneNumber:
          type: string
        link:
          type: string
        firm:
          type: string
        nipc:
          type: number
        description:
          type: string

    category:
      type: object
      properties:
        idCategory: 
          type: integer
        name: 
          type: string
    
    messaged_user:
      type: object
      properties:
        idUser:
          type: integer
        name:
          type: string
        image:
          type: string
    
    message:
      type: object
      properties:
        date:
          type: string
          format: date
        content:
          type: string
        idGive:
          type: integer
        idReceive:
          type: integer

    consumer_job_offer:
      type: object
      properties:
        idJobOffer: 
          type: integer
        description: 
          type: string
        beginDate: 
          type: string
          format: date
        postDate:
          type: string
          format: date
        price:
          type: number
        done:
          type: integer
          enum: [0, 1]
        endDate:
          type: string
          format: date
        idUser:
          type: integer
        idCategory:
          type: integer
        categoryName:
          type: string
        idLocation:
          type: integer
        idLocationName:
          type: string
    
    jobs:
      type: object
      properties:
        idJobOffer:
          type: integer
        idUser:
          type: integer
        name:
          type: string
        lastActivity:
          type: string
          format: date
        description:
          type: string
        beginDate:
          type: string
          format: date
        postDate:
          type: string
          format: date
        endDate:
          type: string
          format: date
        price:
          type: number
        idCategory:
          type: integer
        done:
          type: integer
          enum: [0, 1]
        category:
          type: string
        location:
          type: string
        cordsX:
          type: number
        cordsY:
          type: number

    service_provider_schedule:
      type: object
      properties:
        name: 
          type: string
        workSchedule:
          type: array
          items:
            type: object
            properties:
              date: 
                type: string
                format: date
              occupied:
                type: integer
                enum: [0, 1]
















































































          